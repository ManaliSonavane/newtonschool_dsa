import java.io.*; 
import java.util.*; 

//First repeting char of a string
class Main {
	public static void main (String[] args) {
              Scanner s= new Scanner(System.in);
              String str= "newtone";
              solve(str);
    }
    public static void solve(String str){
              if(str== null){
                  System.out.println("0");
                  return;
              }
              HashMap<Character , Integer> map= new HashMap<>();//generics in java
              
              for(int i=0;i<str.length();i++){
                 char ch = str.charAt(i);
                 //char present or not 
                 if(map.containsKey(ch))
                 {
                     int count= map.get(ch);
                     map.put(ch, count+1);
                 }
                 else{
                     map.put(ch,1);
                 }
              }
              //System.out.println(map);  //(char and their counts);
              //System.out.println(map.get('z'));
              //System.out.println(map.getOrDefault('z' , -1));
              int maxc = 0;
              
              HashMap<Integer,  ArrayList<Integer>> Indexmap= new HashMap<>();
              for(int i=str.length()-1;i>=0;i--){
                  char ch= str.charAt(i);
                  int freq= map.get(ch);
                  if(Indexmap.containsKey(freq)){
                      ArrayList<Integer> indices= Indexmap.get(freq);
                      indices.add(i);
                      Indexmap.put(freq,indices);
                  }
                  else{
                      ArrayList<Integer> indices= new ArrayList<Integer>();
                      indices.add(i);
                      Indexmap.put(freq,indices);
                  }
              }
              
              for(Map.Entry<Integer,  ArrayList<Integer>> entry : Indexmap.entrySet()){
                  if(maxc <entry.getKey()){
                      maxc =entry.getKey();
                  }
              }
              System.out.println(Indexmap);
              System.out.println("max repeating chars indices " + Indexmap.get(maxc));
  }
}
