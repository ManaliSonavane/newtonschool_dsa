import java.io.*; 
import java.util.*; 


class Main {
	public static void main (String[] args) {
       TreeNode root= new TreeNode(1,null,null);
			 root.left= new TreeNode(2,null,null);     
			 root.right= new TreeNode(3,null,null);  
			 root.left.left= new TreeNode(4,null,null); 
			 root.left.right= new TreeNode(5,null,null);
			 root.right.left= new TreeNode(6,null,null);  
			 root.right.right= new TreeNode(7,null,null); 

			 printbfs(root);
			 System.out.println();
			 preorder(root);
			 System.out.println();
			 inorder(root);
			 System.out.println();
			 postorder(root);
	}

	public static void preorder(TreeNode root){
		    if(root==null){
				  return;
			  }
			  System.out.print(root.x+" ");
			  preorder(root.left);
			  preorder(root.right);
	}
	public static void inorder(TreeNode root){
		    if(root==null){
				  return;
			  }
			  inorder(root.left);
			  System.out.print(root.x+" ");
			  inorder(root.right);
	}
	public static void postorder(TreeNode root){
		    if(root==null){
				  return;
			  }
			  postorder(root.left);
			  postorder(root.right);
			  System.out.print(root.x+" ");
	}
}

class TreeNode{
       int x;
			 TreeNode left;
			 TreeNode right;
			 TreeNode(int x,TreeNode left,TreeNode right){
				 this.x= x;
				 this.left= left;
				 this.right= right;
			 }
}

/*
o/p
1 2 4 5 3 6 7 
root-left-right
4 2 5 1 6 3 7 
left-root-right
4 5 2 6 7 3 1 
left-right-root
*/
